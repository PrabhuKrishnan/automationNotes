Primitive Data Types:

They are 8 Primitive Data Types availabe in java,they are 

-byte    -->8 bit 
-short   -->16 bit 
-int     -->32 bit 
-long    -->64 bit  
-float   -->32 bit
-double  -->64 bit
-boolean -->true/fase
-char    -->'\u0000'

--byte: (minimum value of -128 and a maximum value of 127)
==========================================================

--The byte data type is an 8-bit signed two's complement integer
--It has a minimum value of -128 and a maximum value of 127
--The byte data type can be useful for saving memory in large arrays, where the memory savings actually matters

--short: (minimum value of -32,768 and a maximum value of 32,767)
=================================================================

--The short data type is a 16-bit signed two's complement integer.
--It has a minimum value of -32,768 and a maximum value of 32,767 (inclusive).
--As with byte, the same guidelines apply: you can use a short to save memory in large arrays, 
  in situations where the memory savings actually matters
  
 
--int: ( minimum value of -2^31 and a maximum value of 2^31-1)
===================================================================

--By default, the int data type is a 32-bit signed two's complement integer
--which has a minimum value of -2^31 and a maximum value of 2^31-1
--In Java SE 8 and later, you can use the int data type to represent an unsigned 32-bit integer, 
  which has a minimum value of 0 and a maximum value of 2^32-1
--Use the Integer class to use int data type as an unsigned integer

--long (minimum value of -2^63 and a maximum value of 2^63-1)
=======================================================================
--The long data type is a 64-bit two's complement integer
--The signed long has a minimum value of -2^63 and a maximum value of 2^63-1
--In Java SE 8 and later, you can use the long data type to represent an unsigned 64-bit long, 
  which has a minimum value of 0 and a maximum value of 2^64-1
  
--float:
===========================================================================
--The float data type is a single-precision 32-bit IEEE 754 floating point
--As with the recommendations for byte and short, 
   use a float (instead of double) if you need to save memory in large arrays of floating point numbers

--double:
===============================================================================
--The double data type is a double-precision 64-bit IEEE 754 floating point
--For decimal values, this data type is generally the default choice

--boolean:(true/false)
============================================================================
--The boolean data type has only two possible values: true and false
--Use this data type for simple flags that track true/false conditions
--This data type represents one bit of information, but its "size" isn't something that's precisely defined.

--char:
=============================================================================
--The char data type is a single 16-bit Unicode character.
--It has a minimum value of '\u0000' (or 0) and a maximum value of '\uffff' (or 65,535 inclusive).

Default value for the data types:

byte   -->0
short  -->0
int    -->0
long   -->0.0L
float  -->0.0f
double -->0.0d
char   -->'\u0000'
string -->null
boolean-->false 


Literals:

--A literal is the source code representation of a fixed value; 
--literals are represented directly in your code without requiring computation

Example:

boolean result = true;
char capitalC = 'C';
byte b = 100;
short s = 10000;
int i = 100000;
















